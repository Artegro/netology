stages:
  - build
  - deploy

variables:
  IMAGE_TAG: $CI_COMMIT_TAG
  
build:
  tags:
  - k8s
  stage: build
  script:
    - echo "IMAGE_TAG=${IMAGE_TAG}"
    - if [ "${IMAGE_TAG}" == "" ]; then IMAGE_TAG="latest"; fi
    - echo "IMAGE_TAG=${IMAGE_TAG}"
    - echo $CI_REPOSITORY_PASS |docker login --username ag@artegro.ru --password-stdin
    - docker build -t testapp:${IMAGE_TAG} .
    - docker tag testapp:${IMAGE_TAG} agrod80/testapp:${IMAGE_TAG}
    - docker push agrod80/testapp:${IMAGE_TAG}
    

deploy:
  tags:
  - k8s
  stage: deploy
  script:
  - |
    cat << EOF > test.yml
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: testapp-dep
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: testapp
      template:
        metadata:
          labels:
            app: testapp
        spec:
          containers:
          - name: testapp
            image: agrod80/testapp:${IMAGE_TAG}
            ports:
            - containerPort: 80
              name: web
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: web-svc
    spec:
      selector:
        app: testapp
      ports:
      - name: testapp
        port: 80
        protocol: TCP
        targetPort: web
    ---
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: ingress
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
    spec:
      rules:
      - host: test.artegro.ru
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-svc
                port:
                  number: 80
    EOF
  - kubectl apply -f test.yml
  environment: build
  only:
    refs:
      - tags

